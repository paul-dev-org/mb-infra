"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.infraConfigSchema = void 0;
const zod_1 = require("zod");
const appSchema = zod_1.z.object({
    name: zod_1.z.string(),
    healthCheckEndpoint: zod_1.z.string(),
    dockerImagePath: zod_1.z.string(),
    port: zod_1.z.number(),
    cpu: zod_1.z.number().default(256),
    memory: zod_1.z.number().default(512),
    minCapacity: zod_1.z.number().default(1),
    maxCapacity: zod_1.z.number().default(5),
    parameterStoreSecrets: zod_1.z.array(zod_1.z.string()).optional(),
});
const vpcSchema = zod_1.z.object({
    noOfAzs: zod_1.z.number().default(2),
    createNatGateway: zod_1.z.boolean().default(true),
    noOfNatGateways: zod_1.z.number().default(1),
});
const domainSchema = zod_1.z.object({
    name: zod_1.z.string(),
});
const s3Schema = zod_1.z.object({
    bucketName: zod_1.z.string(),
    public: zod_1.z.boolean(),
    usedBy: zod_1.z.array(zod_1.z.string()),
});
const sqsSchema = zod_1.z.object({
    queueName: zod_1.z.string(),
    fifo: zod_1.z.boolean(),
    usedBy: zod_1.z.array(zod_1.z.string()),
});
const stageSchema = zod_1.z.object({
    dev: zod_1.z
        .object({
        account: zod_1.z.string(),
        region: zod_1.z.string(),
    })
        .optional(),
    stg: zod_1.z
        .object({
        account: zod_1.z.string(),
        region: zod_1.z.string(),
    })
        .optional(),
    prd: zod_1.z
        .object({
        account: zod_1.z.string(),
        region: zod_1.z.string(),
    })
        .optional(),
    qa: zod_1.z
        .object({
        account: zod_1.z.string(),
        region: zod_1.z.string(),
    })
        .optional(),
});
const projectSchema = zod_1.z.object({
    name: zod_1.z.string(),
    stages: stageSchema.default({
        dev: {
            account: "123456789012",
            region: "us-west-2",
        },
    }),
});
exports.infraConfigSchema = zod_1.z.object({
    project: projectSchema,
    vpc: vpcSchema.default({}),
    apps: zod_1.z.array(appSchema),
    services: zod_1.z
        .object({
        domain: domainSchema.optional(),
        s3: zod_1.z.array(s3Schema).optional(),
        sqs: zod_1.z.array(sqsSchema).optional(),
    })
        .optional(),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mcmEuY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5mcmEuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZCQUF3QjtBQUV4QixNQUFNLFNBQVMsR0FBRyxPQUFDLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLElBQUksRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFO0lBQ2hCLG1CQUFtQixFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDL0IsZUFBZSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDM0IsSUFBSSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDaEIsR0FBRyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBQzVCLE1BQU0sRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztJQUMvQixXQUFXLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDbEMsV0FBVyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ2xDLHFCQUFxQixFQUFFLE9BQUMsQ0FBQyxLQUFLLENBQUMsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFO0NBQ3hELENBQUMsQ0FBQztBQUVILE1BQU0sU0FBUyxHQUFHLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDdkIsT0FBTyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzlCLGdCQUFnQixFQUFFLE9BQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0lBQzNDLGVBQWUsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztDQUN6QyxDQUFDLENBQUM7QUFFSCxNQUFNLFlBQVksR0FBRyxPQUFDLENBQUMsTUFBTSxDQUFDO0lBQzFCLElBQUksRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFO0NBQ25CLENBQUMsQ0FBQztBQUVILE1BQU0sUUFBUSxHQUFHLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDdEIsVUFBVSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDdEIsTUFBTSxFQUFFLE9BQUMsQ0FBQyxPQUFPLEVBQUU7SUFDbkIsTUFBTSxFQUFFLE9BQUMsQ0FBQyxLQUFLLENBQUMsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO0NBQzlCLENBQUMsQ0FBQztBQUVILE1BQU0sU0FBUyxHQUFHLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDdkIsU0FBUyxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDckIsSUFBSSxFQUFFLE9BQUMsQ0FBQyxPQUFPLEVBQUU7SUFDakIsTUFBTSxFQUFFLE9BQUMsQ0FBQyxLQUFLLENBQUMsT0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO0NBQzlCLENBQUMsQ0FBQztBQUVILE1BQU0sV0FBVyxHQUFHLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDekIsR0FBRyxFQUFFLE9BQUM7U0FDRCxNQUFNLENBQUM7UUFDSixPQUFPLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtRQUNuQixNQUFNLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtLQUNyQixDQUFDO1NBQ0QsUUFBUSxFQUFFO0lBQ2YsR0FBRyxFQUFFLE9BQUM7U0FDRCxNQUFNLENBQUM7UUFDSixPQUFPLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtRQUNuQixNQUFNLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtLQUNyQixDQUFDO1NBQ0QsUUFBUSxFQUFFO0lBQ2YsR0FBRyxFQUFFLE9BQUM7U0FDRCxNQUFNLENBQUM7UUFDSixPQUFPLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtRQUNuQixNQUFNLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtLQUNyQixDQUFDO1NBQ0QsUUFBUSxFQUFFO0lBQ2YsRUFBRSxFQUFFLE9BQUM7U0FDQSxNQUFNLENBQUM7UUFDSixPQUFPLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtRQUNuQixNQUFNLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtLQUNyQixDQUFDO1NBQ0QsUUFBUSxFQUFFO0NBQ2xCLENBQUMsQ0FBQztBQUVILE1BQU0sYUFBYSxHQUFHLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDM0IsSUFBSSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDaEIsTUFBTSxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUM7UUFDeEIsR0FBRyxFQUFFO1lBQ0QsT0FBTyxFQUFFLGNBQWM7WUFDdkIsTUFBTSxFQUFFLFdBQVc7U0FDdEI7S0FDSixDQUFDO0NBQ0wsQ0FBQyxDQUFDO0FBRVUsUUFBQSxpQkFBaUIsR0FBRyxPQUFDLENBQUMsTUFBTSxDQUFDO0lBQ3RDLE9BQU8sRUFBRSxhQUFhO0lBQ3RCLEdBQUcsRUFBRSxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztJQUMxQixJQUFJLEVBQUUsT0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUM7SUFDeEIsUUFBUSxFQUFFLE9BQUM7U0FDTixNQUFNLENBQUM7UUFDSixNQUFNLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBRTtRQUMvQixFQUFFLEVBQUUsT0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxRQUFRLEVBQUU7UUFDaEMsR0FBRyxFQUFFLE9BQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxFQUFFO0tBQ3JDLENBQUM7U0FDRCxRQUFRLEVBQUU7Q0FDbEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcblxuY29uc3QgYXBwU2NoZW1hID0gei5vYmplY3Qoe1xuICAgIG5hbWU6IHouc3RyaW5nKCksXG4gICAgaGVhbHRoQ2hlY2tFbmRwb2ludDogei5zdHJpbmcoKSxcbiAgICBkb2NrZXJJbWFnZVBhdGg6IHouc3RyaW5nKCksXG4gICAgcG9ydDogei5udW1iZXIoKSxcbiAgICBjcHU6IHoubnVtYmVyKCkuZGVmYXVsdCgyNTYpLFxuICAgIG1lbW9yeTogei5udW1iZXIoKS5kZWZhdWx0KDUxMiksXG4gICAgbWluQ2FwYWNpdHk6IHoubnVtYmVyKCkuZGVmYXVsdCgxKSxcbiAgICBtYXhDYXBhY2l0eTogei5udW1iZXIoKS5kZWZhdWx0KDUpLFxuICAgIHBhcmFtZXRlclN0b3JlU2VjcmV0czogei5hcnJheSh6LnN0cmluZygpKS5vcHRpb25hbCgpLFxufSk7XG5cbmNvbnN0IHZwY1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgICBub09mQXpzOiB6Lm51bWJlcigpLmRlZmF1bHQoMiksXG4gICAgY3JlYXRlTmF0R2F0ZXdheTogei5ib29sZWFuKCkuZGVmYXVsdCh0cnVlKSxcbiAgICBub09mTmF0R2F0ZXdheXM6IHoubnVtYmVyKCkuZGVmYXVsdCgxKSxcbn0pO1xuXG5jb25zdCBkb21haW5TY2hlbWEgPSB6Lm9iamVjdCh7XG4gICAgbmFtZTogei5zdHJpbmcoKSxcbn0pO1xuXG5jb25zdCBzM1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgICBidWNrZXROYW1lOiB6LnN0cmluZygpLFxuICAgIHB1YmxpYzogei5ib29sZWFuKCksXG4gICAgdXNlZEJ5OiB6LmFycmF5KHouc3RyaW5nKCkpLFxufSk7XG5cbmNvbnN0IHNxc1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgICBxdWV1ZU5hbWU6IHouc3RyaW5nKCksXG4gICAgZmlmbzogei5ib29sZWFuKCksXG4gICAgdXNlZEJ5OiB6LmFycmF5KHouc3RyaW5nKCkpLFxufSk7XG5cbmNvbnN0IHN0YWdlU2NoZW1hID0gei5vYmplY3Qoe1xuICAgIGRldjogelxuICAgICAgICAub2JqZWN0KHtcbiAgICAgICAgICAgIGFjY291bnQ6IHouc3RyaW5nKCksXG4gICAgICAgICAgICByZWdpb246IHouc3RyaW5nKCksXG4gICAgICAgIH0pXG4gICAgICAgIC5vcHRpb25hbCgpLFxuICAgIHN0ZzogelxuICAgICAgICAub2JqZWN0KHtcbiAgICAgICAgICAgIGFjY291bnQ6IHouc3RyaW5nKCksXG4gICAgICAgICAgICByZWdpb246IHouc3RyaW5nKCksXG4gICAgICAgIH0pXG4gICAgICAgIC5vcHRpb25hbCgpLFxuICAgIHByZDogelxuICAgICAgICAub2JqZWN0KHtcbiAgICAgICAgICAgIGFjY291bnQ6IHouc3RyaW5nKCksXG4gICAgICAgICAgICByZWdpb246IHouc3RyaW5nKCksXG4gICAgICAgIH0pXG4gICAgICAgIC5vcHRpb25hbCgpLFxuICAgIHFhOiB6XG4gICAgICAgIC5vYmplY3Qoe1xuICAgICAgICAgICAgYWNjb3VudDogei5zdHJpbmcoKSxcbiAgICAgICAgICAgIHJlZ2lvbjogei5zdHJpbmcoKSxcbiAgICAgICAgfSlcbiAgICAgICAgLm9wdGlvbmFsKCksXG59KTtcblxuY29uc3QgcHJvamVjdFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgICBuYW1lOiB6LnN0cmluZygpLFxuICAgIHN0YWdlczogc3RhZ2VTY2hlbWEuZGVmYXVsdCh7XG4gICAgICAgIGRldjoge1xuICAgICAgICAgICAgYWNjb3VudDogXCIxMjM0NTY3ODkwMTJcIixcbiAgICAgICAgICAgIHJlZ2lvbjogXCJ1cy13ZXN0LTJcIixcbiAgICAgICAgfSxcbiAgICB9KSxcbn0pO1xuXG5leHBvcnQgY29uc3QgaW5mcmFDb25maWdTY2hlbWEgPSB6Lm9iamVjdCh7XG4gICAgcHJvamVjdDogcHJvamVjdFNjaGVtYSxcbiAgICB2cGM6IHZwY1NjaGVtYS5kZWZhdWx0KHt9KSxcbiAgICBhcHBzOiB6LmFycmF5KGFwcFNjaGVtYSksXG4gICAgc2VydmljZXM6IHpcbiAgICAgICAgLm9iamVjdCh7XG4gICAgICAgICAgICBkb21haW46IGRvbWFpblNjaGVtYS5vcHRpb25hbCgpLFxuICAgICAgICAgICAgczM6IHouYXJyYXkoczNTY2hlbWEpLm9wdGlvbmFsKCksXG4gICAgICAgICAgICBzcXM6IHouYXJyYXkoc3FzU2NoZW1hKS5vcHRpb25hbCgpLFxuICAgICAgICB9KVxuICAgICAgICAub3B0aW9uYWwoKSxcbn0pO1xuXG5leHBvcnQgdHlwZSBJbmZyYUNvbmZpZyA9IHouaW5mZXI8dHlwZW9mIGluZnJhQ29uZmlnU2NoZW1hPjtcbmV4cG9ydCB0eXBlIFByb2plY3RDb25maWcgPSB6LmluZmVyPHR5cGVvZiBwcm9qZWN0U2NoZW1hPjtcbmV4cG9ydCB0eXBlIEFwcENvbmZpZyA9IHouaW5mZXI8dHlwZW9mIGFwcFNjaGVtYT47XG5leHBvcnQgdHlwZSBWcGNDb25maWcgPSB6LmluZmVyPHR5cGVvZiB2cGNTY2hlbWE+O1xuZXhwb3J0IHR5cGUgRG9tYWluQ29uZmlnID0gei5pbmZlcjx0eXBlb2YgZG9tYWluU2NoZW1hPjtcbmV4cG9ydCB0eXBlIFMzQ29uZmlnID0gei5pbmZlcjx0eXBlb2YgczNTY2hlbWE+O1xuZXhwb3J0IHR5cGUgU3FzQ29uZmlnID0gei5pbmZlcjx0eXBlb2Ygc3FzU2NoZW1hPjtcbiJdfQ==