{
    "envs": [
        {
            "name": "dev",
            "account": "123456789012",
            "region": "us-east-1"
        },
        {
            "name": "prod",
            "account": "123456789012",
            "region": "us-west-1"
        }
    ],
    "apps": [
        {
            "name": "service-name-1",
            "dockerImagePath": "./apps/service-name-1",
            "healthCheckEndpoint": "/health",
            "port": 3000,
            "cpu": 256,
            "memory": 512,
            "minCapacity": 1,
            "maxCapacity": 2,
            "parameterStoreSecrets": [
                "PORT",
                "DB_PASSWORD"
            ]
        },
        {
            "name": "service-name-2",
            "dockerImagePath": "./",
            "healthCheckEndpoint": "/health",
            "port": 3001,
            "cpu": 256,
            "memory": 512,
            "minCapacity": 2,
            "maxCapacity": 10,
            "parameterStoreSecrets": [
                "PORT",
                "DB_URL"
            ]
        }
    ],
    "services": {
        "domain": {
            "name": "example.com"
        },
        "s3": [
            {
                "bucketName": "bucket-name-1",
                "public": true,
                "usedBy": [
                    "service-name-1"
                ]
            },
            {
                "bucketName": "bucket-name-2",
                "public": false,
                "usedBy": [
                    "service-name-1",
                    "service-name-2"
                ]
            }
        ],
        "sqs": [
            {
                "queueName": "queue-name-1",
                "fifo": true,
                "usedBy": [
                    "service-name-1"
                ]
            },
            {
                "queueName": "queue-name-2",
                "fifo": false,
                "usedBy": [
                    "service-name-1",
                    "service-name-2"
                ]
            }
        ],
        "rds": {
            "instanceClass": "db.t2.micro",
            "engine": "postgres",
            "storage": 20,
            "multiAZ": false
        },
        "redis": {
            "instanceClass": "cache.t2.micro",
            "engine": "redis",
            "memory": 0.5
        }
    }
}