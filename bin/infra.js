#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const fp_1 = require("../utils/fp");
const config_ops_1 = require("../utils/config-ops");
const files_1 = require("../conts/files");
const network_stack_1 = require("../stacks/network.stack");
const context_1 = require("../constructs/context");
const config = (0, fp_1.pipe)(`${process.cwd()}/${files_1.FILES.INFRA_CONFIG}`, config_ops_1.checkIfConfigFileExists, config_ops_1.readConfigFile);
const env = {
    account: process.env.CDK_DEFAULT_ACCOUNT,
    region: process.env.CDK_DEFAULT_REGION,
};
const cdkApp = new cdk.App();
const context = new context_1.Context(cdkApp, "mb-infra-context");
const tags = {
    env: context.stage,
    managedBy: "mb-infra",
};
new network_stack_1.NetworkStack(cdkApp, `${context.stage}Network`, {
    env,
    tags,
    stage: context.stage,
    ...config.vpc,
});
// config.apps.forEach((app) => {
//     new MbInfraStack(cdkApp, app.name, {
//         env: env,
//         appConfig: app,
//         tags: tags,
//     });
// });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mcmEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmZyYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSx1Q0FBcUM7QUFDckMsbUNBQW1DO0FBQ25DLG9DQUFtQztBQUNuQyxvREFBOEU7QUFFOUUsMENBQXVDO0FBQ3ZDLDJEQUF1RDtBQUN2RCxtREFBZ0Q7QUFFaEQsTUFBTSxNQUFNLEdBQUcsSUFBQSxTQUFJLEVBQ2YsR0FBRyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksYUFBSyxDQUFDLFlBQVksRUFBRSxFQUN4QyxvQ0FBdUIsRUFDdkIsMkJBQWMsQ0FDakIsQ0FBQztBQUNGLE1BQU0sR0FBRyxHQUFvQjtJQUN6QixPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUI7SUFDeEMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCO0NBQ3pDLENBQUM7QUFFRixNQUFNLE1BQU0sR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUU3QixNQUFNLE9BQU8sR0FBRyxJQUFJLGlCQUFPLENBQUMsTUFBTSxFQUFFLGtCQUFrQixDQUFDLENBQUE7QUFDdkQsTUFBTSxJQUFJLEdBQUc7SUFDVCxHQUFHLEVBQUUsT0FBTyxDQUFDLEtBQUs7SUFDbEIsU0FBUyxFQUFFLFVBQVU7Q0FDeEIsQ0FBQztBQUVGLElBQUksNEJBQVksQ0FBQyxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsS0FBSyxTQUFTLEVBQUU7SUFDaEQsR0FBRztJQUNILElBQUk7SUFDSixLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7SUFDcEIsR0FBRyxNQUFNLENBQUMsR0FBRztDQUNoQixDQUFDLENBQUM7QUFFSCxpQ0FBaUM7QUFDakMsMkNBQTJDO0FBQzNDLG9CQUFvQjtBQUNwQiwwQkFBMEI7QUFDMUIsc0JBQXNCO0FBQ3RCLFVBQVU7QUFDVixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuaW1wb3J0IFwic291cmNlLW1hcC1zdXBwb3J0L3JlZ2lzdGVyXCI7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSBcImF3cy1jZGstbGliXCI7XG5pbXBvcnQgeyBwaXBlIH0gZnJvbSBcIi4uL3V0aWxzL2ZwXCI7XG5pbXBvcnQgeyBjaGVja0lmQ29uZmlnRmlsZUV4aXN0cywgcmVhZENvbmZpZ0ZpbGUgfSBmcm9tIFwiLi4vdXRpbHMvY29uZmlnLW9wc1wiO1xuaW1wb3J0IHsgSW5mcmFDb25maWcgfSBmcm9tIFwiLi4vc2NoZW1hcy9pbmZyYS5jb25maWdcIjtcbmltcG9ydCB7IEZJTEVTIH0gZnJvbSBcIi4uL2NvbnRzL2ZpbGVzXCI7XG5pbXBvcnQgeyBOZXR3b3JrU3RhY2sgfSBmcm9tIFwiLi4vc3RhY2tzL25ldHdvcmsuc3RhY2tcIjtcbmltcG9ydCB7IENvbnRleHQgfSBmcm9tIFwiLi4vY29uc3RydWN0cy9jb250ZXh0XCI7XG5cbmNvbnN0IGNvbmZpZyA9IHBpcGU8c3RyaW5nLCBJbmZyYUNvbmZpZz4oXG4gICAgYCR7cHJvY2Vzcy5jd2QoKX0vJHtGSUxFUy5JTkZSQV9DT05GSUd9YCxcbiAgICBjaGVja0lmQ29uZmlnRmlsZUV4aXN0cyxcbiAgICByZWFkQ29uZmlnRmlsZVxuKTtcbmNvbnN0IGVudjogY2RrLkVudmlyb25tZW50ID0ge1xuICAgIGFjY291bnQ6IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX0FDQ09VTlQsXG4gICAgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04sXG59O1xuXG5jb25zdCBjZGtBcHAgPSBuZXcgY2RrLkFwcCgpO1xuXG5jb25zdCBjb250ZXh0ID0gbmV3IENvbnRleHQoY2RrQXBwLCBcIm1iLWluZnJhLWNvbnRleHRcIilcbmNvbnN0IHRhZ3MgPSB7XG4gICAgZW52OiBjb250ZXh0LnN0YWdlLFxuICAgIG1hbmFnZWRCeTogXCJtYi1pbmZyYVwiLFxufTtcblxubmV3IE5ldHdvcmtTdGFjayhjZGtBcHAsIGAke2NvbnRleHQuc3RhZ2V9TmV0d29ya2AsIHtcbiAgICBlbnYsXG4gICAgdGFncyxcbiAgICBzdGFnZTogY29udGV4dC5zdGFnZSxcbiAgICAuLi5jb25maWcudnBjLFxufSk7XG5cbi8vIGNvbmZpZy5hcHBzLmZvckVhY2goKGFwcCkgPT4ge1xuLy8gICAgIG5ldyBNYkluZnJhU3RhY2soY2RrQXBwLCBhcHAubmFtZSwge1xuLy8gICAgICAgICBlbnY6IGVudixcbi8vICAgICAgICAgYXBwQ29uZmlnOiBhcHAsXG4vLyAgICAgICAgIHRhZ3M6IHRhZ3MsXG4vLyAgICAgfSk7XG4vLyB9KTtcbiJdfQ==